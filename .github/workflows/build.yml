name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write  # Grants write access to contents, needed for creating releases
  actions: read    # Grants read access to actions

jobs:
  setup-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

  build:
    needs: setup-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      
      - name: Build with PyInstaller
        run: |
          pip install pyinstaller
          pyinstaller phototransductsim.spec

      - name: Upload macOS Installer
        if: matrix.os == 'macos-latest'
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        with:
          upload_url: ${{ needs.setup-release.outputs.upload_url }}
          asset_path: ./dist/phototransductsim.dmg
          asset_name: phototransductsim-macos.dmg
          asset_content_type: application/octet-stream

      - name: Upload Windows Installer
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        with:
          upload_url: ${{ needs.setup-release.outputs.upload_url }}
          asset_path: ./dist/phototransductsim.exe
          asset_name: phototransductsim-windows-x86_64.exe
          asset_content_type: application/vnd.microsoft.portable-executable

      - name: Upload Linux Installer
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        with:
          upload_url: ${{ needs.setup-release.outputs.upload_url }}
          asset_path: ./dist/phototransductsim
          asset_name: phototransductsim-linux
          asset_content_type: application/octet-stream
